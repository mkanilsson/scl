---
source: src/tests/mod.rs
expression: code
input_file: src/tests/sources/runtime/structs.scl
---
type :main.Nested = { w, w }
type :main.Thing = { :main.Nested }
export function w $std.math.add(w %a, w %b) {
@start
	%.ss.0 =l alloc4 4
	%.ss.1 =l alloc4 4
	storew %a, %.ss.0
	storew %b, %.ss.1
@body
	%.sv.1 =w loadw %.ss.0
	%.sv.2 =w loadw %.ss.1
	%.binop.3 =w add %.sv.1, %.sv.2
	ret %.binop.3
}
export function w $main() {
@start
	%.ss.0 =l alloc4 8
	%.ss.1 =l alloc4 8
	%.ss.2 =l alloc4 8
	%.ss.3 =l alloc4 4
	%.ss.4 =l alloc4 4
	%.ss.5 =l alloc4 4
	%.ss.6 =l alloc4 8
	%.ss.7 =l alloc4 4
	%.ss.8 =l alloc4 4
	%.ss.9 =l alloc4 4
	%.ss.10 =l alloc4 4
	%.ss.11 =l alloc4 4
	%.ss.12 =l alloc4 4
@body
	# Store value into Nested.a (offset: 0)
	%.offset.4 =l add %.ss.0, 0
	storew 10, %.offset.4
	# Store value into Nested.b (offset: 4)
	%.offset.5 =l add %.ss.0, 4
	storew 1, %.offset.5
	# Store value into Thing.nested (offset: 0)
	%.offset.6 =l add %.ss.1, 0
	blit %.ss.0, %.offset.6, 8
	blit %.ss.1, %.ss.2, 8
	%.printf.return_value.7 =w call $printf(l $.str.8, ...)
	%.offset.11 =l add %.ss.2, 0
	%.offset.12 =l add %.offset.11, 0
	%.read.13 =w loadw %.offset.12
	%.printf.return_value.9 =w call $printf(l $.str.10, ..., w %.read.13)
	%.offset.16 =l add %.ss.2, 0
	%.offset.17 =l add %.offset.16, 4
	%.read.18 =w loadw %.offset.17
	%.printf.return_value.14 =w call $printf(l $.str.15, ..., w %.read.18)
	%.member_access.nested.19 =l add %.ss.2, 0
	# Store value into Nested.a (offset: 0)
	%.offset.20 =l add %.ss.6, 0
	storew 20, %.offset.20
	# Store value into Nested.b (offset: 4)
	%.offset.21 =l add %.ss.6, 4
	storew 0, %.offset.21
	blit %.ss.6, %.member_access.nested.19, 8
	%.printf.return_value.22 =w call $printf(l $.str.23, ...)
	%.offset.26 =l add %.ss.2, 0
	%.offset.27 =l add %.offset.26, 0
	%.read.28 =w loadw %.offset.27
	%.printf.return_value.24 =w call $printf(l $.str.25, ..., w %.read.28)
	%.offset.31 =l add %.ss.2, 0
	%.offset.32 =l add %.offset.31, 4
	%.read.33 =w loadw %.offset.32
	%.printf.return_value.29 =w call $printf(l $.str.30, ..., w %.read.33)
	%.member_access.nested.34 =l add %.ss.2, 0
	%.member_access.a.35 =l add %.member_access.nested.34, 0
	storew 30, %.member_access.a.35
	%.printf.return_value.36 =w call $printf(l $.str.37, ...)
	%.offset.40 =l add %.ss.2, 0
	%.offset.41 =l add %.offset.40, 0
	%.read.42 =w loadw %.offset.41
	%.printf.return_value.38 =w call $printf(l $.str.39, ..., w %.read.42)
	%.offset.45 =l add %.ss.2, 0
	%.offset.46 =l add %.offset.45, 4
	%.read.47 =w loadw %.offset.46
	%.printf.return_value.43 =w call $printf(l $.str.44, ..., w %.read.47)
	ret 0
}
data $.str.8 = { b "Before\n", b 0 }
data $.str.10 = { b "a = %d\n", b 0 }
data $.str.15 = { b "b = %d\n", b 0 }
data $.str.23 = { b "After\n", b 0 }
data $.str.25 = { b "a = %d\n", b 0 }
data $.str.30 = { b "b = %d\n", b 0 }
data $.str.37 = { b "After memeber assignment\n", b 0 }
data $.str.39 = { b "a = %d\n", b 0 }
data $.str.44 = { b "b = %d\n", b 0 }
