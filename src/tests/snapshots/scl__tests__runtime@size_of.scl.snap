---
source: src/tests/mod.rs
expression: code
input_file: src/tests/sources/runtime/size_of.scl
---
type :main.S = { w, l }
export function w $std.math.add(w %a, w %b) {
@start
	%.ss.0 =l alloc4 4
	%.ss.1 =l alloc4 4
	storew %a, %.ss.0
	storew %b, %.ss.1
@body
	%.sv.1 =w loadw %.ss.0
	%.sv.2 =w loadw %.ss.1
	%.binop.3 =w add %.sv.1, %.sv.2
	ret %.binop.3
}
export function w $main() {
@start
	%.ss.0 =l alloc4 4
	%.ss.1 =l alloc4 4
@body
	%.printf.return_value.4 =w call $printf(l $.str.5, ..., w 4)
	%.printf.return_value.6 =w call $printf(l $.str.7, ..., w 16)
	ret 0
}
data $.str.5 = { b "@size_of::<u32>() = %d\n", b 0 }
data $.str.7 = { b "@size_of::<S>() = %d\n", b 0 }
